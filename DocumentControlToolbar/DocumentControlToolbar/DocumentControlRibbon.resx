<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="runAcronymTool.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACYAAAAmCAYAAACoPemuAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAANDSURBVFhHvZjJahVBFIYDJi4kIuobCBpxiitR30CUaMAB
        cX4BjVHfwDdw2LrQhZpH8A3EKQ4RBNG9RnBaOED7f5c64XT16fZ2J/cuPnI5dYY/VdU1jRy4/qgLO8WM
        eCheiEXxK8FvbLThg2+Uo0dRFCGhcw3jYla8FkVL3ghiyVHKG4mCklMNo+Ki+Cyiom0gxyVBzl7+SBTk
        InI2iyciL/BF3BbHxKTYIFYn+I2NNnwY2jz+qSB3KAoiMcZB8VX4hAtiWkT+TRBDrM/1TRyKREGUBE6K
        P8InOici3zacFT4nNU73K2xK/BUW/FHsF5FvF/aJD8LyU2vqf8K2CLrYgl6K3SL3Wy7kfC6sDjUn6oSt
        En6ivxdMYu+zkpCbGlaP2qORMD5jcwK63LcPAmr4mjO5MBY+v06txETvF2pZXZaWcS+MVdka+ax94EBB
        hP6yM1j9q16Yb+iyTnnuiDWZrZYk7LCw+gsmbJcz0pWlwA6Q55XY7my1ICKJ81NpEgMnADPcEqXADliu
        n+J8stXihN0UFjuL4b4znBClwMSmFlguo3FonbCjwmLmMMw7A8NaCkxYe1cY2q2iktsJ81NqHoMf242i
        FJiw9uXwQ1SG1gnjVGK+ixg4dZqBY0spMGHtK0FpaJ2wMWE+vzEMWxjMiV7uJmHDGkqDHls6YjthlaEc
        xuSHcPlwwiqT/4EzHBelwIS1d+Wt2CEquZ2wynJx2RnqFthovarDchl3ReV2ZDhhlQV2EFsStF35K1sS
        +E38SLJ1hRy1Q5eTRIWbOFzxDcnWlXuiduhykrDaY09+UOQ2sxQ8YE4Jq1s5KILvNRjG0XqP8DV7vZUL
        Y+XlhmxOw76M8BAzFgmDCeGvb9xcBiGOnI+F1eEL3maiImGQX3jfib0i8u0Cuchp+fu68BrcXLw4OCMi
        3zb4iQ7UuJCLahIGXEq+C5+ItzF6NPJvgrXRLwlA7ulIFERJPMy5Z8InhE+CLYSnJnaO9YI3L+A3Nva+
        GwLfPJ6J3jvRRqIgEpNDMS4svInlBdrCOsXevOyHO886cU2w3URFmyCGdXKtKOWNREHJqQV87vznPABz
        nqM3eesCfmPjlMoNv/G1KBJVFMXIP6WGO/h5PBooAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="headingsDropdown.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACYAAAAmCAYAAACoPemuAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAB3SURBVFhH7c5LCoAwEARRr+e9vFUON2pAGcwiaZ2EILV4
        i3xoalm3ZDMiTPUMO89DmdntOBNWRZiKMJUa5u+6I0xFmEoJG+aKIqzVlzD/HinvEybI+78M64owVVSY
        //tGsUlYRbEZFRaOMBVhKsJUrWHTIEyTbAdK9d2lWtXZUwAAAABJRU5ErkJggg==
</value>
  </data>
</root>